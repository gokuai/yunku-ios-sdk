// Generated by Apple Swift version 2.1.1 (swiftlang-700.1.101.15 clang-700.1.81)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
typedef SWIFT_ENUM(NSInteger, AuthType) {
  AuthTypeDefault = 0,
  AuthTypePreview = 1,
  AuthTypeDownload = 2,
  AuthTypeUpload = 3,
};

enum LogLevel : NSInteger;

SWIFT_CLASS("_TtC13YunkuSwiftSDK6Config")
@interface Config : NSObject
+ (BOOL)logPrint;
+ (void)setLogPrint:(BOOL)value;
+ (enum LogLevel)logLevel;
+ (void)setLogLevel:(enum LogLevel)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13YunkuSwiftSDK11SignAbility")
@interface SignAbility : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum NetType : NSInteger;
@protocol UploadCallBack;
@class UploadManager;
@class NSData;

SWIFT_CLASS("_TtC13YunkuSwiftSDK14EntFileManager")
@interface EntFileManager : SignAbility
- (nonnull instancetype)initWithOrgClientId:(NSString * __nonnull)orgClientId orgClientSecret:(NSString * __nonnull)orgClientSecret OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * __nonnull)getFileList:(NSInteger)start fullPath:(NSString * __nonnull)fullPath;
- (NSDictionary<NSString *, id> * __nonnull)getUpdateList:(BOOL)isCompare fetchDateline:(NSInteger)fetchDateline;
- (NSDictionary<NSString *, id> * __nonnull)getFileInfo:(NSString * __nonnull)fullPath type:(enum NetType)type;
- (NSDictionary<NSString *, id> * __nonnull)createFolder:(NSString * __nonnull)fullPath opName:(NSString * __nonnull)opName;
- (UploadManager * __nonnull)uploadByBlock:(NSString * __nonnull)localPath fullPath:(NSString * __nonnull)fullPath opName:(NSString * __nonnull)opName opId:(NSInteger)opId overwrite:(BOOL)overwrite delegate:(id <UploadCallBack> __nonnull)delegate;
- (NSDictionary<NSString *, id> * __nonnull)createFile:(NSString * __nonnull)fullPath opName:(NSString * __nonnull)opName data:(NSData * __nonnull)data;
- (NSDictionary<NSString *, id> * __nonnull)del:(NSString * __nonnull)fullPaths opName:(NSString * __nonnull)opName;
- (NSDictionary<NSString *, id> * __nonnull)move:(NSString * __nonnull)fullPath destFullPath:(NSString * __nonnull)destFullPath opName:(NSString * __nonnull)opName;
- (NSDictionary<NSString *, id> * __nonnull)link:(NSString * __nonnull)fullPath deadline:(NSInteger)deadline authType:(enum AuthType)authType password:(NSString * __nullable)password;
- (NSDictionary<NSString *, id> * __nonnull)sendmsg:(NSString * __nonnull)title text:(NSString * __nonnull)text image:(NSString * __nullable)image linkUrl:(NSString * __nullable)linkUrl opName:(NSString * __nonnull)opName;
- (NSDictionary<NSString *, id> * __nonnull)links:(BOOL)fileOnly;
- (NSDictionary<NSString *, id> * __nonnull)getUpdateCounts:(NSInteger)beginDateline endDateline:(NSInteger)endDateline showDelete:(BOOL)showDelete;
- (NSDictionary<NSString *, id> * __nonnull)createFileByUrl:(NSString * __nonnull)fullPath opId:(NSInteger)opId opName:(NSString * __null_unspecified)opName overwrite:(BOOL)overwrite fileUrl:(NSString * __nonnull)fileUrl;
- (NSDictionary<NSString *, id> * __nonnull)getUploadServers;
- (NSDictionary<NSString *, id> * __nonnull)getServerSite:(NSString * __nonnull)type;
- (EntFileManager * __nonnull)clone;
@end


SWIFT_CLASS("_TtC13YunkuSwiftSDK12ParentEngine")
@interface ParentEngine : SignAbility
- (NSDictionary<NSString *, id> * __nonnull)accessToken:(NSString * __nonnull)username password:(NSString * __nonnull)password;
@end

enum MemberType : NSInteger;

SWIFT_CLASS("_TtC13YunkuSwiftSDK13EntLibManager")
@interface EntLibManager : ParentEngine
- (nonnull instancetype)initWithClientId:(NSString * __nonnull)clientId clientSecret:(NSString * __nonnull)clientSecret isEnt:(BOOL)isEnt OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithClientId:(NSString * __nonnull)clientId clientSecret:(NSString * __nonnull)clientSecret isEnt:(BOOL)isEnt token:(NSString * __nonnull)token OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * __nonnull)create:(NSString * __nonnull)orgName orgCapacity:(NSString * __nullable)orgCapacity storagePointName:(NSString * __nullable)storagePointName orgDesc:(NSString * __nullable)orgDesc orgLogo:(NSString * __nullable)orgLogo;
- (NSDictionary<NSString *, id> * __nonnull)getLibList;
- (NSDictionary<NSString *, id> * __nonnull)bindLib:(NSInteger)orgId title:(NSString * __nullable)title linkUrl:(NSString * __nullable)linkUrl;
- (NSDictionary<NSString *, id> * __nonnull)unbindLib:(NSString * __nonnull)orgClientId;
- (NSDictionary<NSString *, id> * __nonnull)getMembers:(NSInteger)start size:(NSInteger)size orgId:(NSInteger)orgId;
- (NSDictionary<NSString *, id> * __nonnull)addMembers:(NSInteger)orgId roleId:(NSInteger)roleId memberIds:(NSArray<NSString *> * __nonnull)memberIds;
- (NSDictionary<NSString *, id> * __nonnull)setMemberRole:(NSInteger)orgId roleId:(NSInteger)roleId memberIds:(NSArray<NSString *> * __nonnull)memberIds;
- (NSDictionary<NSString *, id> * __nonnull)delMember:(NSInteger)orgId memberIds:(NSArray<NSString *> * __nonnull)memberIds;
- (NSDictionary<NSString *, id> * __nonnull)getGroups:(NSInteger)orgId;
- (NSDictionary<NSString *, id> * __nonnull)addGroup:(NSInteger)orgId groupId:(NSInteger)groupId roleId:(NSInteger)roleId;
- (NSDictionary<NSString *, id> * __nonnull)delGroup:(NSInteger)orgId groupId:(NSInteger)groupId;
- (NSDictionary<NSString *, id> * __nonnull)setGroupRole:(NSInteger)orgId groupId:(NSInteger)groupId roleId:(NSInteger)roleId;
- (NSDictionary<NSString *, id> * __nonnull)destroy:(NSString * __nonnull)orgClientId;
- (NSDictionary<NSString *, id> * __nonnull)set:(NSInteger)orgId orgName:(NSString * __nullable)orgName orgCapacity:(NSString * __nullable)orgCapacity orgDes:(NSString * __nullable)orgDes orgLogo:(NSString * __nullable)orgLogo;
- (NSDictionary<NSString *, id> * __nonnull)getMember:(NSInteger)orgId type:(enum MemberType)type ids:(NSArray<NSString *> * __nonnull)ids;
- (NSDictionary<NSString *, id> * __nonnull)getInfo:(NSInteger)orgId;
- (EntLibManager * __nonnull)clone;
@end


SWIFT_CLASS("_TtC13YunkuSwiftSDK10EntManager")
@interface EntManager : ParentEngine
- (nonnull instancetype)initWithClientId:(NSString * __nonnull)clientId clientSecret:(NSString * __nonnull)clientSecret isEnt:(BOOL)isEnt OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithClientId:(NSString * __nonnull)clientId clientSecret:(NSString * __nonnull)clientSecret isEnt:(BOOL)isEnt token:(NSString * __nonnull)token OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * __nonnull)getRoles;
- (NSDictionary<NSString *, id> * __nonnull)getMembers:(NSInteger)start size:(NSInteger)size;
- (NSDictionary<NSString *, id> * __nonnull)getGroups;
- (NSDictionary<NSString *, id> * __nonnull)getMemberFileLink:(NSInteger)memberId fileOnly:(BOOL)fileOnly;
- (NSDictionary<NSString *, id> * __nonnull)getMemberById:(NSInteger)memberId;
- (NSDictionary<NSString *, id> * __nonnull)getMemberByOutId:(NSString * __nonnull)outId;
- (NSDictionary<NSString *, id> * __nonnull)getMemberByAccount:(NSString * __nonnull)account;
- (NSDictionary<NSString *, id> * __nonnull)addSyncMember:(NSString * __nonnull)oudId memberName:(NSString * __nonnull)memberName account:(NSString * __nonnull)account memberEmail:(NSString * __nullable)memberEmail memberPhone:(NSString * __nullable)memberPhone password:(NSString * __nullable)password;
- (NSDictionary<NSString *, id> * __nonnull)delSyncMember:(NSArray<NSString *> * __nonnull)members;
- (NSDictionary<NSString *, id> * __nonnull)addSyncGroup:(NSString * __nonnull)outId name:(NSString * __nonnull)name parentOutId:(NSString * __nullable)parentOutId;
- (NSDictionary<NSString *, id> * __nonnull)delSyncGroup:(NSArray<NSString *> * __nonnull)groups;
- (NSDictionary<NSString *, id> * __nonnull)addSyncGroupMember:(NSString * __nonnull)groupOutId members:(NSArray<NSString *> * __nonnull)members;
- (NSDictionary<NSString *, id> * __nonnull)delSyncGroupMember:(NSString * __nonnull)groupOutId members:(NSArray<NSString *> * __nonnull)members;
- (NSDictionary<NSString *, id> * __nonnull)getGroupMembers:(NSInteger)groupId start:(NSInteger)start size:(NSInteger)size showChild:(BOOL)showChild;
- (EntManager * __nonnull)clone;
@end


/// HTTP status codes as per http://en.wikipedia.org/wiki/List_of_HTTP_status_codes
///
/// The RF2616 standard is completely covered (http://www.ietf.org/rfc/rfc2616.txt)
typedef SWIFT_ENUM(NSInteger, HTTPStatusCode) {
  HTTPStatusCodeContinue = 100,
  HTTPStatusCodeSwitchingProtocols = 101,
  HTTPStatusCodeProcessing = 102,
  HTTPStatusCodeOK = 200,
  HTTPStatusCodeCreated = 201,
  HTTPStatusCodeAccepted = 202,
  HTTPStatusCodeNonAuthoritativeInformation = 203,
  HTTPStatusCodeNoContent = 204,
  HTTPStatusCodeResetContent = 205,
  HTTPStatusCodePartialContent = 206,
  HTTPStatusCodeMultiStatus = 207,
  HTTPStatusCodeAlreadyReported = 208,
  HTTPStatusCodeIMUsed = 226,
  HTTPStatusCodeMultipleChoices = 300,
  HTTPStatusCodeMovedPermanently = 301,
  HTTPStatusCodeFound = 302,
  HTTPStatusCodeSeeOther = 303,
  HTTPStatusCodeNotModified = 304,
  HTTPStatusCodeUseProxy = 305,
  HTTPStatusCodeSwitchProxy = 306,
  HTTPStatusCodeTemporaryRedirect = 307,
  HTTPStatusCodePermanentRedirect = 308,
  HTTPStatusCodeBadRequest = 400,
  HTTPStatusCodeUnauthorized = 401,
  HTTPStatusCodePaymentRequired = 402,
  HTTPStatusCodeForbidden = 403,
  HTTPStatusCodeNotFound = 404,
  HTTPStatusCodeMethodNotAllowed = 405,
  HTTPStatusCodeNotAcceptable = 406,
  HTTPStatusCodeProxyAuthenticationRequired = 407,
  HTTPStatusCodeRequestTimeout = 408,
  HTTPStatusCodeConflict = 409,
  HTTPStatusCodeGone = 410,
  HTTPStatusCodeLengthRequired = 411,
  HTTPStatusCodePreconditionFailed = 412,
  HTTPStatusCodeRequestEntityTooLarge = 413,
  HTTPStatusCodeRequestURITooLong = 414,
  HTTPStatusCodeUnsupportedMediaType = 415,
  HTTPStatusCodeRequestedRangeNotSatisfiable = 416,
  HTTPStatusCodeExpectationFailed = 417,
  HTTPStatusCodeImATeapot = 418,
  HTTPStatusCodeAuthenticationTimeout = 419,
  HTTPStatusCodeUnprocessableEntity = 422,
  HTTPStatusCodeLocked = 423,
  HTTPStatusCodeFailedDependency = 424,
  HTTPStatusCodeUpgradeRequired = 426,
  HTTPStatusCodePreconditionRequired = 428,
  HTTPStatusCodeTooManyRequests = 429,
  HTTPStatusCodeRequestHeaderFieldsTooLarge = 431,
  HTTPStatusCodeLoginTimeout = 440,
  HTTPStatusCodeNoResponse = 444,
  HTTPStatusCodeRetryWith = 449,
  HTTPStatusCodeUnavailableForLegalReasons = 451,
  HTTPStatusCodeRequestHeaderTooLarge = 494,
  HTTPStatusCodeCertError = 495,
  HTTPStatusCodeNoCert = 496,
  HTTPStatusCodeHTTPToHTTPS = 497,
  HTTPStatusCodeTokenExpired = 498,
  HTTPStatusCodeClientClosedRequest = 499,
  HTTPStatusCodeInternalServerError = 500,
  HTTPStatusCodeNotImplemented = 501,
  HTTPStatusCodeBadGateway = 502,
  HTTPStatusCodeServiceUnavailable = 503,
  HTTPStatusCodeGatewayTimeout = 504,
  HTTPStatusCodeHTTPVersionNotSupported = 505,
  HTTPStatusCodeVariantAlsoNegotiates = 506,
  HTTPStatusCodeInsufficientStorage = 507,
  HTTPStatusCodeLoopDetected = 508,
  HTTPStatusCodeBandwidthLimitExceeded = 509,
  HTTPStatusCodeNotExtended = 510,
  HTTPStatusCodeNetworkAuthenticationRequired = 511,
  HTTPStatusCodeNetworkTimeoutError = 599,
};

typedef SWIFT_ENUM(NSInteger, LogLevel) {
  LogLevelInfo = 0,
  LogLevelWarning = 1,
  LogLevelError = 2,
};

typedef SWIFT_ENUM(NSInteger, MemberType) {
  MemberTypeAccount = 0,
  MemberTypeOutId = 1,
  MemberTypeMemberId = 2,
};


@interface NSData (SWIFT_EXTENSION(YunkuSwiftSDK))
@end


@interface NSData (SWIFT_EXTENSION(YunkuSwiftSDK))
@end


@interface NSData (SWIFT_EXTENSION(YunkuSwiftSDK))
- (NSData * __nonnull)sha1;
@end

typedef SWIFT_ENUM(NSInteger, NetType) {
  NetTypeDefault = 0,
  NetTypeIn = 1,
};



SWIFT_CLASS("_TtC13YunkuSwiftSDK12ReturnResult")
@interface ReturnResult : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * __null_unspecified result;
@property (nonatomic) NSInteger code;
+ (ReturnResult * __nonnull)create:(NSDictionary<NSString *, id> * __nonnull)dic;
@end



SWIFT_PROTOCOL("_TtP13YunkuSwiftSDK14UploadCallBack_")
@protocol UploadCallBack
- (void)onSuccess:(NSString * __nonnull)fileHash fullPath:(NSString * __nonnull)fullPath;
- (void)onFail:(NSString * __nonnull)errorMsg;
- (void)onProgress:(float)percent;
@end


SWIFT_CLASS("_TtC13YunkuSwiftSDK13UploadManager")
@interface UploadManager : SignAbility
- (void)stop;
@end

#pragma clang diagnostic pop
