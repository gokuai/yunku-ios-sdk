// Generated by Apple Swift version 1.2 (swiftlang-602.0.53.1 clang-602.0.53)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
#if __has_feature(nullability)
#  define SWIFT_NULLABILITY(X) X
#else
# if !defined(__nonnull)
#  define __nonnull
# endif
# if !defined(__nullable)
#  define __nullable
# endif
# if !defined(__null_unspecified)
#  define __null_unspecified
# endif
#  define SWIFT_NULLABILITY(X)
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import UIKit;
@import YunkuSwiftSDK;
@import Foundation;
@import Dispatch;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@protocol HookDelegate;

SWIFT_CLASS("_TtC11iOSYunkuSDK15FileDataManager")
@interface FileDataManager : NSObject
- (void)registerHook:(id <HookDelegate> __nonnull)delegate;
- (void)unRegisterHook;
@end


SWIFT_PROTOCOL("_TtP11iOSYunkuSDK16FileInfoDelegate_")
@protocol FileInfoDelegate
- (void)onGetFileUrl:(NSString * __nonnull)url;
- (void)onFail;
@end

@class NSCoder;

SWIFT_CLASS("_TtC11iOSYunkuSDK12FileListCell")
@interface FileListCell : UITableViewCell
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11iOSYunkuSDK17FileUploadManager")
@interface FileUploadManager : NSObject <UIAlertViewDelegate, UploadCallBack>
- (void)onFail:(NSString * __nonnull)errorMsg;
- (void)onProgress:(float)percent;
- (void)onSuccess:(NSString * __nonnull)fileHash fullPath:(NSString * __nonnull)fullPath;
@end

enum HookType : NSInteger;

SWIFT_PROTOCOL("_TtP11iOSYunkuSDK12HookDelegate_")
@protocol HookDelegate
- (BOOL)hookInvoke:(enum HookType)type fullPath:(NSString * __nonnull)fullPath;
@end

typedef SWIFT_ENUM(NSInteger, HookType) {
  HookTypeFileList = 0,
  HookTypeDownload = 1,
  HookTypeUpload = 2,
  HookTypeCreateDir = 3,
  HookTypeRename = 4,
  HookTypeDelete = 5,
};


SWIFT_CLASS("_TtC11iOSYunkuSDK9ImageData")
@interface ImageData : NSObject
@property (nonatomic, copy) NSString * __nonnull fileName;
@property (nonatomic, copy) NSString * __nonnull fullPath;
@property (nonatomic, copy) NSString * __nonnull thumbBig;
@property (nonatomic, copy) NSString * __nonnull fileHash;
@property (nonatomic, copy) NSString * __nonnull thumbNail;
@property (nonatomic) uint64_t fileSize;
@property (nonatomic, readonly, copy) NSString * __nonnull thumbBigCachePath;
@property (nonatomic, readonly, copy) NSString * __nonnull localPath;
@property (nonatomic, readonly) uint64_t localFileSize;
@property (nonatomic, readonly) uint64_t thumbBigCacheSize;
@property (nonatomic, readonly, copy) NSString * __nonnull thumbNailCachePath;
- (void)getFileUri:(void (^ __nonnull)(BOOL, NSString * __nonnull))resopnse;
@end


@interface NSBundle (SWIFT_EXTENSION(iOSYunkuSDK))
+ (NSString * __nonnull)getLocalStringFromBundle:(NSString * __nonnull)key comment:(NSString * __nonnull)comment;
@end


@interface NSData (SWIFT_EXTENSION(iOSYunkuSDK))
+ (NSData * __nullable)convertFromData:(NSData * __nonnull)data;
- (NSData * __null_unspecified)asData;
@end


@interface NSFileManager (SWIFT_EXTENSION(iOSYunkuSDK))
@end


@interface NSHTTPURLResponse (SWIFT_EXTENSION(iOSYunkuSDK))
@end


@interface NSMutableData (SWIFT_EXTENSION(iOSYunkuSDK))
@end

@class UIImage;
@class UIView;
@class UIViewController;

SWIFT_CLASS("_TtC11iOSYunkuSDK16OBJCMethodBridge")
@interface OBJCMethodBridge : NSObject
+ (NSString * __nonnull)getLocalString:(NSString * __nonnull)key comment:(NSString * __nonnull)comment;
+ (UIImage * __nonnull)getLocalImage:(NSString * __nonnull)imageName;
+ (void)makeToast:(NSString * __nonnull)message view:(UIView * __nonnull)view;
+ (void)showProgress:(UIViewController * __nonnull)control;
+ (void)hideProgress:(UIViewController * __nonnull)control;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11iOSYunkuSDK6Option")
@interface Option : NSObject
@property (nonatomic) BOOL canUpload;
@property (nonatomic) BOOL canDel;
@property (nonatomic) BOOL canRename;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum SDKLogLevel : NSInteger;

SWIFT_CLASS("_TtC11iOSYunkuSDK9SDKConfig")
@interface SDKConfig : NSObject
+ (BOOL)logPrint;
+ (void)setLogPrint:(BOOL)newValue;
+ (enum SDKLogLevel)logLevel;
+ (void)setLogLevel:(enum SDKLogLevel)newValue;
+ (NSString * __nonnull)orgClientId;
+ (void)setOrgClientId:(NSString * __nonnull)value;
+ (NSString * __nonnull)orgClientSecret;
+ (void)setOrgClientSecret:(NSString * __nonnull)value;
+ (NSString * __nonnull)orgRootPath;
+ (void)setOrgRootPath:(NSString * __nonnull)value;
+ (NSString * __nonnull)orgRootTitle;
+ (void)setOrgRootTitle:(NSString * __nonnull)value;
+ (NSString * __nonnull)orgOptName;
+ (void)setOrgOptName:(NSString * __nonnull)value;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, SDKLogLevel) {
  SDKLogLevelInfo = 0,
  SDKLogLevelWarning = 1,
  SDKLogLevelError = 2,
};

@class NSArray;

SWIFT_CLASS("_TtC11iOSYunkuSDK14SocketAnyEvent")
@interface SocketAnyEvent
@property (nonatomic, readonly, copy) NSString * __null_unspecified event;
@property (nonatomic, readonly) NSArray * __nullable items;
@end

@protocol SocketEngineClient;
@protocol NSURLSessionDelegate;
@class NSDictionary;
@class WebSocket;
@class NSError;

SWIFT_CLASS("_TtC11iOSYunkuSDK12SocketEngine")
@interface SocketEngine : NSObject
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithClient:(id <SocketEngineClient> __nonnull)client sessionDelegate:(id <NSURLSessionDelegate> __nullable)sessionDelegate OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithClient:(id <SocketEngineClient> __nonnull)client opts:(NSDictionary * __nullable)opts;
- (void)closeWithFast:(BOOL)fast;
- (void)openWithOpts:(NSDictionary * __nullable)opts;

/// Write a message, independent of transport. For Objective-C. withData should be an NSArray of NSData
- (void)writeObjc:(NSString * __nonnull)msg withType:(NSInteger)type withData:(NSArray * __nullable)data;
- (void)websocketDidConnect:(WebSocket * __nonnull)socket;
- (void)websocketDidDisconnect:(WebSocket * __nonnull)socket error:(NSError * __nullable)error;
- (void)websocketDidReceiveMessage:(WebSocket * __nonnull)socket text:(NSString * __nonnull)text;
- (void)websocketDidReceiveData:(WebSocket * __nonnull)socket data:(NSData * __nonnull)data;
@end


SWIFT_PROTOCOL("_TtP11iOSYunkuSDK18SocketEngineClient_")
@protocol SocketEngineClient
@property (nonatomic, readonly) dispatch_queue_attr_t __null_unspecified handleQueue;
@property (nonatomic, readonly) dispatch_queue_attr_t __null_unspecified emitQueue;
@property (nonatomic, readonly, copy) NSString * __nonnull socketURL;
@property (nonatomic, readonly) BOOL secure;
- (void)didError:(id __nonnull)reason;
- (void)engineDidClose:(NSString * __nonnull)reason;
- (void)parseSocketMessage:(NSString * __nonnull)msg;
- (void)parseBinaryData:(NSData * __nonnull)data;
@end


SWIFT_CLASS("_TtC11iOSYunkuSDK14SocketIOClient")
@interface SocketIOClient : NSObject <SocketEngineClient>
@property (nonatomic, readonly, copy) NSString * __nonnull socketURL;
@property (nonatomic, readonly) dispatch_queue_attr_t __null_unspecified handleAckQueue;
@property (nonatomic, readonly) dispatch_queue_attr_t __null_unspecified handleQueue;
@property (nonatomic, readonly) dispatch_queue_attr_t __null_unspecified emitQueue;
@property (nonatomic, readonly) BOOL closed;
@property (nonatomic, readonly) BOOL connected;
@property (nonatomic, readonly) BOOL connecting;
@property (nonatomic) SocketEngine * __nullable engine;
@property (nonatomic, copy) NSString * __nonnull nsp;
@property (nonatomic, copy) NSDictionary * __nullable opts;
@property (nonatomic) BOOL reconnects;
@property (nonatomic, readonly) BOOL reconnecting;
@property (nonatomic) NSInteger reconnectWait;
@property (nonatomic, readonly) BOOL secure;
@property (nonatomic, readonly, copy) NSString * __nullable sid;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithSocketURL:(NSString * __nonnull)socketURL options:(NSDictionary * __nullable)options;

/// Closes the socket. Only reopen the same socket if you know what you're doing.
/// Will turn off automatic reconnects.
/// Pass true to fast if you're closing from a background task
- (void)closeWithFast:(BOOL)fast;

/// Connect to the server.
- (void)connect;

/// Connect to the server. If we aren't connected after timeoutAfter, call handler
- (void)connectWithTimeoutAfter:(NSInteger)timeoutAfter withTimeoutHandler:(void (^ __nullable)(void))handler;

/// error
- (void)didError:(id __nonnull)reason;

/// Same as close
- (void)disconnectWithFast:(BOOL)fast;

/// Same as emit, but meant for Objective-C
- (void)emit:(NSString * __nonnull)event withItems:(NSArray * __nonnull)items;

/// Same as emitWithAck, but for Objective-C
- (void (^ __nonnull)(uint64_t, void (^ __nonnull)(NSArray * __nullable)))emitWithAck:(NSString * __nonnull)event withItems:(NSArray * __nonnull)items;
- (void)engineDidClose:(NSString * __nonnull)reason;

/// Removes handler(s)
- (void)off:(NSString * __nonnull)event;

/// Adds a handler for an event.
- (void)on:(NSString * __nonnull)name callback:(void (^ __nonnull)(NSArray * __nullable, void (^ __nullable)(NSArray * __nonnull)))callback;

/// Adds a handler that will be called on every event.
- (void)onAny:(void (^ __nonnull)(SocketAnyEvent * __nonnull))handler;

/// Same as connect
- (void)open;
- (void)parseSocketMessage:(NSString * __nonnull)msg;
- (void)parseBinaryData:(NSData * __nonnull)data;

/// Trieds to reconnect to the server.
- (void)reconnect;
@end


SWIFT_CLASS("_TtC11iOSYunkuSDK10SwiftRegex")
@interface SwiftRegex : NSObject
- (BOOL)doesMatchWithOptions:(NSMatchingOptions)options;
- (NSRange)rangeWithOptions:(NSMatchingOptions)options;
- (NSString * __nullable)matchWithOptions:(NSMatchingOptions)options;
- (NSArray * __nullable)groupsWithOptions:(NSMatchingOptions)options;
- (NSString * __nullable)objectAtIndexedSubscript:(NSInteger)groupno;
- (void)setObject:(NSString * __nullable)newValue atIndexedSubscript:(NSInteger)groupno;
- (NSArray * __nonnull)rangesWithOptions:(NSMatchingOptions)options;
- (NSArray * __nonnull)matchesWithOptions:(NSMatchingOptions)options;
- (NSDictionary * __nonnull)dictionaryWithOptions:(NSMatchingOptions)options;
@property (nonatomic, readonly) BOOL boolValue;
@end


@interface UIButton (SWIFT_EXTENSION(iOSYunkuSDK))
- (void)hnk_cancelSetImage;
- (void)hnk_setImage:(UIImage * __nonnull)image state:(UIControlState)state animated:(BOOL)animated success:(void (^ __nullable)(UIImage * __nonnull))succeed;
- (BOOL)hnk_shouldCancelImageForKey:(NSString * __nonnull)key;
- (void)hnk_cancelSetBackgroundImage;
- (void)hnk_setBackgroundImage:(UIImage * __nonnull)image state:(UIControlState)state animated:(BOOL)animated success:(void (^ __nullable)(UIImage * __nonnull))succeed;
- (BOOL)hnk_shouldCancelBackgroundImageForKey:(NSString * __nonnull)key;
@end


@interface UIImage (SWIFT_EXTENSION(iOSYunkuSDK))
@end


@interface UIImage (SWIFT_EXTENSION(iOSYunkuSDK))
+ (UIImage * __nullable)convertFromData:(NSData * __nonnull)data;
- (NSData * __null_unspecified)asData;
@end


@interface UIImage (SWIFT_EXTENSION(iOSYunkuSDK))
@end


@interface UIImageView (SWIFT_EXTENSION(iOSYunkuSDK))
- (void)hnk_cancelSetImage;
- (void)hnk_setImage:(UIImage * __nonnull)image animated:(BOOL)animated success:(void (^ __nullable)(UIImage * __nonnull))succeed;
- (BOOL)hnk_shouldCancelForKey:(NSString * __nonnull)key;
@end


@interface UIView (SWIFT_EXTENSION(iOSYunkuSDK))
@end


@interface UIViewController (SWIFT_EXTENSION(iOSYunkuSDK))
@end

@class NSURL;
@class NSHTTPCookie;
@class NSStream;

SWIFT_CLASS("_TtC11iOSYunkuSDK9WebSocket")
@interface WebSocket : NSObject <NSStreamDelegate>
@property (nonatomic) dispatch_queue_t __null_unspecified queue;
@property (nonatomic, copy) NSDictionary * __nonnull headers;
@property (nonatomic) BOOL voipEnabled;
@property (nonatomic) BOOL selfSignedSSL;
@property (nonatomic, readonly) BOOL isConnected;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithUrl:(NSURL * __nonnull)url OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithUrl:(NSURL * __nonnull)url cookies:(NSArray * __nullable)cookies;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithUrl:(NSURL * __nonnull)url protocols:(NSArray * __nonnull)protocols;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithUrl:(NSURL * __nonnull)url protocols:(NSArray * __nonnull)protocols connect:(void (^ __nonnull)(void))connect disconnect:(void (^ __nonnull)(NSError * __nullable))disconnect text:(void (^ __nonnull)(NSString * __nonnull))text data:(void (^ __nonnull)(NSData * __nonnull))data;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithUrl:(NSURL * __nonnull)url connect:(void (^ __nonnull)(void))connect disconnect:(void (^ __nonnull)(NSError * __nullable))disconnect text:(void (^ __nonnull)(NSString * __nonnull))text;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithUrl:(NSURL * __nonnull)url connect:(void (^ __nonnull)(void))connect disconnect:(void (^ __nonnull)(NSError * __nullable))disconnect data:(void (^ __nonnull)(NSData * __nonnull))data;

/// Connect to the websocket server on a background thread
- (void)connect;

/// disconnect from the websocket server
- (void)disconnect;

/// write a string to the websocket. This sends it as a text frame.
- (void)writeString:(NSString * __nonnull)str;

/// write binary data to the websocket. This sends it as a binary frame.
- (void)writeData:(NSData * __nonnull)data;
- (void)writePing:(NSData * __nonnull)data;
- (void)stream:(NSStream * __nonnull)aStream handleEvent:(NSStreamEvent)eventCode;
@end

@class UITableView;
@class NSIndexPath;
@class UIActionSheet;
@class UIImagePickerController;
@class UIAlertView;

SWIFT_CLASS("_TtC11iOSYunkuSDK20YKMainViewController")
@interface YKMainViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UIActionSheetDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate, UIAlertViewDelegate>
@property (nonatomic) Option * __null_unspecified option;
@property (nonatomic) id <HookDelegate> __null_unspecified delegate;
- (void)viewDidLoad;
- (NSInteger)tableView:(UITableView * __nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (CGFloat)tableView:(UITableView * __nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)tableView:(UITableView * __nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)didReceiveMemoryWarning;
- (void)actionSheet:(UIActionSheet * __nonnull)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex;
- (void)imagePickerController:(UIImagePickerController * __nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary * __nonnull)info;
- (void)imagePickerControllerDidCancel:(UIImagePickerController * __nonnull)picker;
- (void)alertView:(UIAlertView * __nonnull)alertView clickedButtonAtIndex:(NSInteger)buttonIndex;
- (void)presentViewController:(UIViewController * __nonnull)viewControllerToPresent animated:(BOOL)flag completion:(void (^ __nullable)(void))completion;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
